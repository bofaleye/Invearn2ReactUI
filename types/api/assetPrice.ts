/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/AssetData/GetTrendingAssets": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "application/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "text/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "application/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "text/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/AssetData/GetTopMovingAssets": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "application/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "text/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "application/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
            "text/json": components["schemas"]["ClientCompanyViewModelIEnumerableCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/AssetPrices": {
    get: {
      parameters: {
        query?: {
          Query?: string;
          PageNumber?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelPaginatedList"];
            "application/json": components["schemas"]["AssetPriceViewModelPaginatedList"];
            "text/json": components["schemas"]["AssetPriceViewModelPaginatedList"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelPaginatedList"];
            "application/json": components["schemas"]["AssetPriceViewModelPaginatedList"];
            "text/json": components["schemas"]["AssetPriceViewModelPaginatedList"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateAssetPriceCommand"];
          "text/json": components["schemas"]["CreateAssetPriceCommand"];
          "application/*+json": components["schemas"]["CreateAssetPriceCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/AssetPrices/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateAssetPriceCommand"];
          "text/json": components["schemas"]["UpdateAssetPriceCommand"];
          "application/*+json": components["schemas"]["UpdateAssetPriceCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["AssetPriceViewModelCommandResult"];
            "application/json": components["schemas"]["AssetPriceViewModelCommandResult"];
            "text/json": components["schemas"]["AssetPriceViewModelCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringCommandResult"];
            "application/json": components["schemas"]["StringCommandResult"];
            "text/json": components["schemas"]["StringCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["StringCommandResult"];
            "application/json": components["schemas"]["StringCommandResult"];
            "text/json": components["schemas"]["StringCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Test/enqueue-job": {
    get: {
      parameters: {
        query?: {
          Chn?: string;
          Email?: string;
          PhoneNumber?: string;
          ClientCompanyId?: string;
          Bvn?: string;
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "text/plain": components["schemas"]["HolderViewModelCommandResult"];
            "application/json": components["schemas"]["HolderViewModelCommandResult"];
            "text/json": components["schemas"]["HolderViewModelCommandResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["HolderViewModelCommandResult"];
            "application/json": components["schemas"]["HolderViewModelCommandResult"];
            "text/json": components["schemas"]["HolderViewModelCommandResult"];
          };
        };
        /** @description Error */
        default: {
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ApplicationProfile: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      userId?: string | null;
      phoneNumber?: string | null;
      email?: string | null;
      address?: string | null;
      token?: string | null;
      isDisabled?: boolean;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
      individuals?: components["schemas"]["Individual"][] | null;
      organisations?: components["schemas"]["Organisation"][] | null;
      shareholderTypeId?: string | null;
      shareholderType?: components["schemas"]["ShareholderType"];
      stateId?: string | null;
      state?: components["schemas"]["State"];
      isTokenConfirmed?: boolean;
    };
    AssetPrice: {
      /** Format: double */
      price?: number;
      /** Format: date-time */
      timestamp?: string;
    };
    AssetPriceViewModel: {
      id: string;
      description?: string | null;
      isActive?: boolean;
      /** Format: date-time */
      dateCreated?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      asset?: components["schemas"]["AssetProps"];
      code?: string | null;
      /** Format: double */
      price?: number;
      /** Format: date-time */
      timestamp?: string;
    };
    AssetPriceViewModelCommandResult: {
      /** Format: date-time */
      timeStamp?: string;
      errorFlag?: boolean;
      payload?: components["schemas"]["AssetPriceViewModel"];
      message?: string | null;
      /** Format: int32 */
      statusCode?: number | null;
      detail?: string | null;
      instance?: string | null;
      validationErrors?: components["schemas"]["ModelValidationError"][] | null;
    };
    AssetPriceViewModelPaginatedList: {
      items?: components["schemas"]["AssetPriceViewModel"][] | null;
      /** Format: int32 */
      pageNumber?: number;
      /** Format: int32 */
      totalPages?: number;
      /** Format: int32 */
      totalCount?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
    };
    AssetProps: {
      id?: string | null;
      name?: string | null;
      code?: string | null;
    };
    ClientCompanyViewModel: {
      id: string;
      description?: string | null;
      isActive?: boolean;
      /** Format: date-time */
      dateCreated?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      registrar?: components["schemas"]["RegistrarViewModel"];
      name?: string | null;
      code?: string | null;
      logoUrl?: string | null;
      marketClassification?: string | null;
      sector?: string | null;
      subSector?: string | null;
      natureofBusiness?: string | null;
      companyAddress?: string | null;
      telephone?: string | null;
      fax?: string | null;
      email?: string | null;
      auditor?: string | null;
      companySecretary?: string | null;
      dateListed?: string | null;
      dateofIncorporation?: string | null;
      website?: string | null;
      boardOfDirectors?: string | null;
      /** Format: double */
      currentPrice?: number;
      prices?: components["schemas"]["AssetPrice"][] | null;
    };
    ClientCompanyViewModelIEnumerableCommandResult: {
      /** Format: date-time */
      timeStamp?: string;
      errorFlag?: boolean;
      payload?: components["schemas"]["ClientCompanyViewModel"][] | null;
      message?: string | null;
      /** Format: int32 */
      statusCode?: number | null;
      detail?: string | null;
      instance?: string | null;
      validationErrors?: components["schemas"]["ModelValidationError"][] | null;
    };
    CreateAssetPriceCommand: {
      description?: string | null;
      isActive?: boolean;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      assetId?: string | null;
      /** Format: double */
      price?: number;
      /** Format: date-time */
      timestamp?: string;
    };
    Holder: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      applicationProfileId?: string | null;
      applicationProfile?: components["schemas"]["ApplicationProfile"];
      platformUniqueIdentifier?: string | null;
      chn?: string | null;
      bvn?: string | null;
      address?: string | null;
      isCautioned?: boolean;
      shareholderTypeId?: string | null;
      shareholderType?: components["schemas"]["ShareholderType"];
      holderIdentifications?: components["schemas"]["HolderIdentification"][] | null;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
    };
    HolderIdentification: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      holderId?: string | null;
      holder?: components["schemas"]["Holder"];
      value?: string | null;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
    };
    HolderViewModel: {
      id: string;
      description?: string | null;
      isActive?: boolean;
      /** Format: date-time */
      dateCreated?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      applicationProfileId?: string | null;
      applicationProfile?: components["schemas"]["ApplicationProfile"];
      platformUniqueIdentifier?: string | null;
      chn?: string | null;
      bvn?: string | null;
      address?: string | null;
      isCautioned?: boolean;
      shareholderTypeId?: string | null;
      shareholderType?: components["schemas"]["ShareholderType"];
      holderIdentifications?: components["schemas"]["HolderIdentification"][] | null;
    };
    HolderViewModelCommandResult: {
      /** Format: date-time */
      timeStamp?: string;
      errorFlag?: boolean;
      payload?: components["schemas"]["HolderViewModel"];
      message?: string | null;
      /** Format: int32 */
      statusCode?: number | null;
      detail?: string | null;
      instance?: string | null;
      validationErrors?: components["schemas"]["ModelValidationError"][] | null;
    };
    Individual: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      firstname?: string | null;
      lastname?: string | null;
      othernames?: string | null;
      bvn?: string | null;
      applicationProfileId?: string | null;
      applicationProfile?: components["schemas"]["ApplicationProfile"];
      /** Format: date-time */
      dateOfBirth?: string;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
    };
    ModelValidationError: {
      entity?: string | null;
      field?: string | null;
      type?: string | null;
      value?: Record<string, unknown> | null;
      rawValue?: Record<string, unknown> | null;
      error?: string | null;
      code?: string | null;
      description?: string | null;
    };
    Organisation: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      name?: string | null;
      rcNumber?: string | null;
      tin?: string | null;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
      applicationProfileId?: string | null;
      applicationProfile?: components["schemas"]["ApplicationProfile"];
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    RegistrarViewModel: {
      id: string;
      description?: string | null;
      isActive?: boolean;
      /** Format: date-time */
      dateCreated?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      name?: string | null;
      code?: string | null;
      platform?: string | null;
    };
    ShareholderType: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      name?: string | null;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
    };
    State: {
      id?: string | null;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      createdByUserId?: string | null;
      /** Format: date-time */
      dateCreated?: string | null;
      updatedByUserId?: string | null;
      /** Format: date-time */
      dateUpdated?: string | null;
      deletedByUserId?: string | null;
      isDeleted?: boolean;
      /** Format: date-time */
      dateDeleted?: string | null;
      name?: string | null;
      displayCaption?: string | null;
      dropdownCaption?: string | null;
      shortCaption?: string | null;
    };
    StringCommandResult: {
      /** Format: date-time */
      timeStamp?: string;
      errorFlag?: boolean;
      payload?: string | null;
      message?: string | null;
      /** Format: int32 */
      statusCode?: number | null;
      detail?: string | null;
      instance?: string | null;
      validationErrors?: components["schemas"]["ModelValidationError"][] | null;
    };
    UpdateAssetPriceCommand: {
      id: string;
      description?: string | null;
      isActive?: boolean;
      /** Format: uuid */
      rowVersion?: string;
      fullText?: string | null;
      tags?: string | null;
      caption?: string | null;
      assetId?: string | null;
      /** Format: double */
      price?: number;
      /** Format: date-time */
      timestamp?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
